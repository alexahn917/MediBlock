"""
Django settings for mediblock project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Imports the Google Cloud client library
from google.oauth2 import service_account
from google.cloud import vision

import pyrebase

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'az%e+v1a*6e!f#!pu533weij(p18%lw_be3nbdt2g%v2)-7_j5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '127.0.0.1',
    'mediblock-195521.appspot.com',
    'localhost'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mediblock.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mediblock.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'mediblock',
        'USER': 'mediblock',
        'PASSWORD': 'mediblock',
        'HOST': '/cloudsql/mediblock-195521:us-central1:mediblock-vm',
        'PORT': '5432',
    }
}

if os.getenv('GAE_INSTANCE'):
    pass
else:
    DATABASES['default']['HOST'] = '127.0.0.1'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

# STATIC_URL = 'https://storage.googleapis.com/mediblock-static/static/'
STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

GOOGLE_CREDENTIALS = service_account.Credentials.from_service_account_file('credentials.json')
GOOGLE_CLIENT = vision.ImageAnnotatorClient(credentials=GOOGLE_CREDENTIALS)


config = {
    "apiKey": "AIzaSyAqQPd5fSlmnOUbOUK7dRVRu9LUu07-Wuo",
    "authDomain": "mediblock-195521.firebaseapp.com",
    "databaseURL": "https://mediblock-195521.firebaseio.com",
    "projectId": "mediblock-195521",
    "storageBucket": "mediblock-195521.appspot.com",
    "messagingSenderId": "20010659986"
}

FIREBASE = pyrebase.initialize_app(config)
FIREBASE_DB = FIREBASE.database()
FIREBASE_AUTH = FIREBASE.auth()

def stream_requests(message):
    # return render(request, 'medical_bills.html')
    print(message['event'])
    print(message['path'])
    print(message['data'])

# FIREBASE_DB.child("requests").stream(stream_requests)

